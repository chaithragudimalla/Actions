name: main

on:
  workflow_dispatch:
  
jobs:
  inputs:
    uses: sark1/Actions/.github/workflows/pipelineconfig.yml@main
    
  compile:
    needs: [inputs]
    if: "contains(needs.inputs.outputs.output3, 'maven') && (needs.inputs.outputs.output2, 'java8')"
    uses: sark1/Actions/.github/workflows/java1_8-maven.yml@main
  Code-Quality:
    runs-on: ubuntu-latest
    needs: [compile]
    steps:
       - uses: actions/checkout@v3
       - name: code Analysis
         run: echo 'mvn sonar:sonar'
          
  security-scan:
    needs: Code-Quality
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    #needs: Code-Quality
    steps:
       - uses: actions/checkout@v3
       - name: scanning
         run: echo 'scanning'
         
  Quality-Gates:
    #if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
       - uses: actions/checkout@v3
       - name: CodeAnalysis_Quality_gates
         run: echo 'code analysis quality gates'
       - name: SecurityAnalysis_Quality_gates
         run: echo 'security analysis quality gates'
         
  Publish_Artifact:
    runs-on: ubuntu-latest
    needs: [compile, Quality-Gates]
    steps:
       - uses: actions/checkout@v3
       - name: github uploading
         uses: actions/upload-artifact@v3
         with:
           name: 'Dockerfile'
           path: /home/runner/work/Project/Project/Dockerfile.txt
       - name: uploading to jFrog
         run: echo 'jfrog'
         
  ChangeRequest_Validation:
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [Publish_Artifact]
    steps:
      - uses: actions/checkout@v3
      - name: validations status
        run: echo 'ChangeRequest Validation "performed"'
    
  Deploy_Develop:
    if: github.event.ref == 'refs/heads/feature'
    runs-on: ubuntu-latest
    environment: 
      name: Development 
    needs: Quality-Gates
    steps:
       - uses: actions/checkout@v3
       - name: deploying
         run: echo 'feature branch'
         
  Deploy_Stage:
    if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: 
      name: Staging 
    needs: Quality-Gates
    steps:
       - uses: actions/checkout@v3
       - name: deploying into develop branch
         run: echo 'develop branch'
         
  Deploy_PROD:
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: Production
    needs: [ChangeRequest_Validation]
    steps:
       - uses: actions/checkout@v3
       - name: deploying to Prod
         run: echo 'master branch'
   
  

  
        
 
